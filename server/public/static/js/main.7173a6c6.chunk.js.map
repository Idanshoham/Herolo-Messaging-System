{"version":3,"sources":["Reducers/authReducer.js","Reducers/userReducer.js","Reducers/messagesReducer.js","Reducers/index.js","Actions/types.js","Components/App.js","Constants/baseUrlConstant.js","Actions/userActions.js","Components/Auth/Signup.js","Actions/authActions.js","Components/Auth/Signin.js","Components/Messages/NewMessage.js","Actions/messageActions.js","Components/Messages/OperationBox.js","Constants/dateConstants.js","Services/dateService.js","Components/Messages/MessagesList.js","Components/EditUserDetails.js","Components/Messages/Mailbox.js","Components/HOCS/requireAuth.js","index.js"],"names":["INITIAL_STATE","authenticated","errorMessage","user","messagesReceived","undefined","messagesSent","combineReducers","auth","state","action","type","payload","messages","children","BASE_URL","getUserDetailsByToken","userToken","dispatch","a","axios","post","response","data","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Signup","props","handleSubmit","event","preventDefault","signup","then","history","push","name","username","password","confirmPassword","this","classes","Container","component","maxWidth","CssBaseline","className","Grid","container","justify","Avatar","Typography","variant","noValidate","onSubmit","TextField","autoComplete","required","fullWidth","id","label","onInput","e","setState","target","value","autoFocus","align","color","Button","item","Link","href","onClick","Component","withStyles","connect","formProps","token","localStorage","setItem","Signin","signin","NewMessage","writeMessage","handleClose","sender","receiver","subject","message","multiline","rows","rowsMax","startIcon","messageDetails","root","background","grid","marginBottom","modal","justifyContent","border","boxShadow","shadows","padding","OperationBox","isDrawerOpen","isInbox","handleAddition","handleMessagesShown","useState","selectedIndex","setSelectedIndex","open","setOpen","added","handleListItemClick","index","List","aria-label","size","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","inbox","Divider","ListItem","button","selected","ListItemIcon","ListItemText","primary","monthNames","dateFormating","dateString","date","Date","someDate","today","getDate","getMonth","getFullYear","isToday","getHours","getMinutes","isThisYear","toLocaleDateString","ExpansionPanel","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","minHeight","content","MuiExpansionPanelSummary","ExpansionPanelDetails","MuiExpansionPanelDetails","CenteredContentTypography","alignSelf","MessagesList","handleDelete","setExpanded","handleOpen","isEmpty","map","square","onChange","panel","newExpanded","key","aria-controls","style","marginRight","dateService","creationDate","IconButton","_id","EditUserDetails","editUserDetails","newName","oldPassword","newPassword","disabled","userDetails","toolbar","paddingRight","toolbarIcon","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","height","overflow","paddingTop","paddingBottom","modalPaper","clearUser","getAllReceivedMessages","getAllSentMessages","deleteMessage","messageId","isDeleterSender","clearMessages","signout","removeItem","ChildComponent","ComposedComponent","shouldNavigateAway","requireAuth","setInbox","openModal","setOpenModal","handleModalClose","useEffect","handleGetAllReceviedMessages","handleGetAllSentMessages","AppBar","clsx","Toolbar","edge","noWrap","Drawer","Paper","newMessages","filter","length","store","createStore","Reducers","getItem","applyMiddleware","reduxThunk","ReactDOM","render","App","path","exact","Mailbox","document","querySelector"],"mappings":"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","file":"static/js/main.7173a6c6.chunk.js","sourcesContent":["import { AUTH_USER, AUTH_ERROR } from '../Actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    authenticated: '',\r\n    errorMessage: ''\r\n};\r\n\r\nexport default function(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case AUTH_USER:\r\n            return { ...state, authenticated: action.payload, errorMessage: '' };\r\n        case AUTH_ERROR:\r\n            return { ...state, errorMessage: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { USER_DATA, USER_ERROR, USER_CLEAR } from '../Actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    user: {},\r\n    errorMessage: ''\r\n};\r\n\r\nexport default function(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case USER_DATA:\r\n            return { ...state, user: action.payload, errorMessage: '' };\r\n        case USER_ERROR:\r\n            return { ...state, errorMessage: action.payload };\r\n        case USER_CLEAR:\r\n            return INITIAL_STATE;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { MESSAGE_SEND, MESSAGE_SENT, MESSAGE_RECEVIED, MESSAGE_CLEAR, MESSAGE_ERROR } from '../Actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    messagesReceived: undefined,\r\n    messagesSent: undefined,\r\n    errorMessage: ''\r\n};\r\n\r\nexport default function(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case MESSAGE_SEND:\r\n            return { ...state, errorMessage: '' };\r\n        case MESSAGE_SENT:\r\n                return { ...state, messagesSent: action.payload, errorMessage: '' };\r\n        case MESSAGE_RECEVIED:\r\n            return { ...state, messagesReceived: action.payload, errorMessage: '' };\r\n        case MESSAGE_CLEAR:\r\n            return INITIAL_STATE;\r\n        case MESSAGE_ERROR:\r\n            return { ...state, errorMessage: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport auth from './authReducer';\r\nimport user from './userReducer';\r\nimport messages from './messagesReducer';\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    user,\r\n    messages,\r\n});","export const AUTH_USER = 'auth_user';\r\nexport const AUTH_ERROR = 'auth_error';\r\n\r\nexport const USER_DATA = 'user_data';\r\nexport const USER_ERROR = 'user_error';\r\nexport const USER_CLEAR = 'user_clear';\r\n\r\nexport const MESSAGE_SEND = 'message_send';\r\nexport const MESSAGE_SENT = 'message_sent';\r\nexport const MESSAGE_RECEVIED = 'message_received';\r\nexport const MESSAGE_CLEAR = 'message_clear';\r\nexport const MESSAGE_ERROR = 'message_error';\r\n","import React from 'react';\r\n\r\nexport default ({ children }) => {\r\n    return (\r\n        <div>\r\n            {children}\r\n        </div>\r\n    );\r\n};","export const BASE_URL = 'https://herolomessegingsystem.herokuapp.com';\r\n","import axios from 'axios';\r\nimport { USER_DATA, USER_ERROR, USER_CLEAR } from './types';\r\nimport { BASE_URL } from '../Constants/baseUrlConstant';\r\n\r\nexport const getUserDetailsByToken = userToken => async dispatch => {\r\n    try {\r\n        const response = await axios.post(\r\n            `${BASE_URL}/getUserDetailsById`, \r\n            { userToken }\r\n        );\r\n\r\n        dispatch({ \r\n            type: USER_DATA, \r\n            payload: response.data.user \r\n        });\r\n        return response;\r\n    } catch (e) {\r\n        dispatch({ \r\n            type: USER_ERROR, \r\n            payload: 'invalid Username' \r\n        });\r\n    };\r\n}\r\n\r\nexport const getUserDetails = username => async dispatch => {\r\n    try {\r\n        const response = await axios.post(\r\n            `${BASE_URL}/getUserDetails`, \r\n            { username }\r\n        );\r\n\r\n        dispatch({ \r\n            type: USER_DATA, \r\n            payload: response.data.user \r\n        });\r\n        return response;\r\n    } catch (e) {\r\n        dispatch({ \r\n            type: USER_ERROR, \r\n            payload: 'invalid Username' \r\n        });\r\n    };\r\n}\r\n\r\nexport const editUserDetails = userDetails => async dispatch => {\r\n    try {\r\n        const response = await axios.post(\r\n            `${BASE_URL}/editUserDetails`, \r\n            userDetails\r\n        );\r\n\r\n        dispatch({ \r\n            type: USER_DATA, \r\n            payload: response.data.user \r\n        });\r\n        return response;\r\n    } catch (e) {\r\n        dispatch({ \r\n            type: USER_ERROR, \r\n            payload: 'invalid Username' \r\n        });\r\n    };\r\n}\r\n\r\nexport const clearUser = () => {\r\n    return {\r\n        type: USER_CLEAR,\r\n        payload: undefined\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport { signup } from '../../Actions/authActions';\r\nimport { getUserDetailsByToken } from '../../Actions/userActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nclass Signup extends Component {\r\n    constructor(props){ \r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.authenticated) {\r\n            this.props.getUserDetailsByToken(this.props.authenticated).then(() => {\r\n                this.props.history.push(\"/\");\r\n            });\r\n        }\r\n    }\r\n    \r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.signup(this.state).then(() => {\r\n            this.props.getUserDetailsByToken(this.props.authenticated).then(() => {\r\n                this.props.history.push(\"/\");\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Grid container justify=\"center\">\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                    </Grid>\r\n                    <Grid container justify=\"center\">\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign up\r\n                        </Typography>\r\n                    </Grid>\r\n                    <form className={classes.form} noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField\r\n                        autoComplete=\"name\"\r\n                        name=\"name\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        onInput={ e=> this.setState({ name: e.target.value })}\r\n                        autoFocus\r\n                        />\r\n                        <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        onInput={ e=> this.setState({ username: e.target.value })}\r\n                        autoComplete=\"username\"\r\n                        />\r\n                        <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"password\"\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onInput={ e=> this.setState({ password: e.target.value })}\r\n                        autoComplete=\"current-password\"\r\n                        />\r\n                        <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"confirmPassword\"\r\n                        label=\"Confirm Password\"\r\n                        id=\"confirmPassword\"\r\n                        type=\"password\"\r\n                        onInput={ e=> this.setState({ confirmPassword: e.target.value })}\r\n                        autoComplete=\"current-password\"\r\n                        />\r\n                        <Typography align=\"center\" color=\"error\">\r\n                            {this.props.errorMessage}\r\n                        </Typography>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        <Grid container justify=\"center\">\r\n                            <Grid item>\r\n                            <Link href=\"\" variant=\"body2\" onClick={() => {this.props.history.push(\"/Signin\")}}>\r\n                                {\"Already have an account? Sign in\"}\r\n                            </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n              </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { authenticated: state.auth.authenticated, errorMessage: state.auth.errorMessage };\r\n};\r\n\r\nexport default withStyles(useStyles)(connect(mapStateToProps, { signup, getUserDetailsByToken })(Signup));\r\n","import axios from 'axios';\r\nimport { AUTH_USER, AUTH_ERROR } from './types';\r\nimport { BASE_URL } from '../Constants/baseUrlConstant';\r\n\r\nexport const signup = formProps => async dispatch => {\r\n    try {\r\n        const response = await axios.post(\r\n            `${BASE_URL}/signup`, \r\n            formProps\r\n        );\r\n\r\n        dispatch({ \r\n            type: AUTH_USER, \r\n            payload: response.data.token \r\n        });\r\n        localStorage.setItem('token', response.data.token);\r\n        return response;\r\n    } catch (e) {\r\n        dispatch({ \r\n            type: AUTH_ERROR, \r\n            payload: 'Username in use' \r\n        });\r\n    };\r\n};\r\n\r\nexport const signin = formProps => async dispatch => {\r\n    try {\r\n        const response = await axios.post(\r\n            `${BASE_URL}/signin`, \r\n            formProps\r\n        );\r\n\r\n        dispatch({ \r\n            type: AUTH_USER, \r\n            payload: response.data.token \r\n        });\r\n        localStorage.setItem('token', response.data.token);\r\n        return response;\r\n    } catch (e) {\r\n        dispatch({ \r\n            type: AUTH_ERROR, \r\n            payload: 'Invalid login credentials' \r\n        });\r\n    };\r\n};\r\n\r\nexport const signout = () => {\r\n    localStorage.removeItem('token');\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: ''\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport { signin } from '../../Actions/authActions';\r\nimport { getUserDetailsByToken } from '../../Actions/userActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nclass Signin extends Component {\r\n    constructor(props){ \r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.authenticated) {\r\n            this.props.getUserDetailsByToken(this.props.authenticated).then(() => {\r\n                this.props.history.push(\"/\");\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.signin(this.state).then(() => {\r\n            this.props.getUserDetailsByToken(this.props.authenticated).then(() => {\r\n                this.props.history.push(\"/\");\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Grid container justify=\"center\">\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                    </Grid>\r\n                    <Grid container justify=\"center\">\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign in\r\n                        </Typography>\r\n                    </Grid>\r\n                    <form className={classes.form} noValidate onSubmit={this.handleSubmit}> \r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            autoComplete=\"username\"\r\n                            onInput={ e=> this.setState({ username: e.target.value })}\r\n                            autoFocus\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onInput={ e=> this.setState({ password: e.target.value })}\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        <Typography align=\"center\" color=\"error\">\r\n                            {this.props.errorMessage}\r\n                        </Typography>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Grid container justify=\"center\">\r\n                            <Grid item>\r\n                            <Link href=\"\" variant=\"body2\" onClick={() => {this.props.history.push(\"/Signup\")}}>\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n              </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { authenticated: state.auth.authenticated, errorMessage: state.auth.errorMessage };\r\n};\r\n\r\nexport default withStyles(useStyles)(connect(mapStateToProps, { signin, getUserDetailsByToken })(Signin));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nimport { writeMessage } from '../../Actions/messageActions';\r\n\r\nclass NewMessage extends Component {\r\n    constructor(props){ \r\n        super(props);\r\n\r\n        this.state = {\r\n            sender: props.username,\r\n            receiver: props.receiver ? props.receiver : '',\r\n            subject: '',\r\n            message: '',\r\n        }\r\n    }\r\n    \r\n    handleSubmit = event => {\r\n        const { writeMessage, handleClose } = this.props;\r\n        event.preventDefault();\r\n        writeMessage(this.state).then(() => {\r\n            handleClose(true);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.main}>\r\n                    <Grid container justify=\"center\">\r\n                        <Avatar className={classes.avatar}>\r\n                            <EmailIcon />\r\n                        </Avatar>\r\n                    </Grid>\r\n                    <Grid container justify=\"center\">\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Compose New Message\r\n                        </Typography>\r\n                    </Grid>\r\n                    <form className={classes.form} noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField\r\n                        autoComplete=\"receiver\"\r\n                        name=\"receiver\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"receiver\"\r\n                        label=\"To\"\r\n                        value={this.state.receiver}\r\n                        onInput={ e=> this.setState({ receiver: e.target.value })}\r\n                        autoFocus\r\n                        />\r\n                        <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"subject\"\r\n                        label=\"Subject\"\r\n                        name=\"subject\"\r\n                        onInput={ e=> this.setState({ subject: e.target.value })}\r\n                        autoComplete=\"subject\"\r\n                        />\r\n                        <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        multiline\r\n                        rows={5}\r\n                        rowsMax={20}\r\n                        id=\"message\"\r\n                        label=\"Context\"\r\n                        name=\"message\"\r\n                        onInput={ e=> this.setState({ message: e.target.value })}\r\n                        autoComplete=\"message\"\r\n                        />\r\n                        <Typography align=\"center\" color=\"error\">\r\n                            {this.props.errorMessage}\r\n                        </Typography>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<SendIcon />}\r\n                            className={classes.submit}\r\n                        >\r\n                            Send\r\n                        </Button>\r\n                    </form>\r\n              </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { username: state.user.user.username, errorMessage: state.messages.errorMessage };\r\n}\r\n\r\nexport default connect(mapStateToProps, { writeMessage })(NewMessage);\r\n","import axios from 'axios';\r\nimport { MESSAGE_SEND, MESSAGE_SENT, MESSAGE_RECEVIED, MESSAGE_CLEAR, MESSAGE_ERROR } from './types';\r\nimport { BASE_URL } from '../Constants/baseUrlConstant';\r\n\r\nexport const writeMessage = messageDetails => async dispatch => {\r\n    try {\r\n        const response = await axios.post(\r\n            `${BASE_URL}/writeMessage`, \r\n            messageDetails\r\n        );\r\n\r\n        dispatch({ \r\n            type: MESSAGE_SEND, \r\n            payload: ''\r\n        });\r\n        return response;\r\n    } catch (e) {\r\n        dispatch({ \r\n            type: MESSAGE_ERROR, \r\n            payload: 'message was not sent' \r\n        });\r\n    };\r\n}\r\n\r\nexport const deleteMessage = (messageId, isDeleterSender) => async dispatch => {\r\n    try {\r\n        const response = await axios.post(\r\n            `${BASE_URL}/deleteMessage`, \r\n            { messageId, isDeleterSender }\r\n        );\r\n\r\n        dispatch({ \r\n            type: MESSAGE_SEND, \r\n            payload: ''\r\n        });\r\n        return response;\r\n    } catch (e) {\r\n        dispatch({ \r\n            type: MESSAGE_ERROR, \r\n            payload: 'message was not deleted' \r\n        });\r\n    };\r\n}\r\n\r\nexport const getAllReceivedMessages = username => async dispatch => {\r\n    try {\r\n        const response = await axios.post(\r\n            `${BASE_URL}/getAllReceivedMessages`, \r\n            username \r\n        );\r\n        \r\n        dispatch({ \r\n            type: MESSAGE_RECEVIED, \r\n            payload: response.data.messages \r\n        });\r\n        return response;\r\n    } catch (e) {\r\n        dispatch({ \r\n            type: MESSAGE_ERROR, \r\n            payload: 'couldnt get messages' \r\n        });\r\n    };\r\n}\r\n\r\nexport const getAllSentMessages = username => async dispatch => {\r\n    try {\r\n        const response = await axios.post(\r\n            `${BASE_URL}/getAllSentMessages`, \r\n            username \r\n        );\r\n        \r\n        dispatch({ \r\n            type: MESSAGE_SENT, \r\n            payload: response.data.messages \r\n        });\r\n        return response;\r\n    } catch (e) {\r\n        dispatch({ \r\n            type: MESSAGE_ERROR, \r\n            payload: 'couldnt get messages' \r\n        });\r\n    };\r\n}\r\n\r\nexport const clearMessages = () => {\r\n    return {\r\n        type: MESSAGE_CLEAR,\r\n        payload: undefined\r\n    };\r\n};\r\n","import React, { useState } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport NewMessage from './NewMessage';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  grid: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst OperationBox = props => {\r\n  const classes = useStyles();\r\n  const { isDrawerOpen, isInbox, handleAddition, handleMessagesShown } = props;\r\n  const [selectedIndex, setSelectedIndex] = useState(isInbox ? 'inbox' : 'sent');\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (added = false) => {\r\n    setOpen(false);\r\n    if (added)\r\n      handleAddition();\r\n  };\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    handleMessagesShown(isInbox);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n      { isDrawerOpen &&\r\n        <Grid container justify=\"center\" className={classes.grid}>\r\n          <Button variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<AddIcon />} onClick={handleOpen}> \r\n            New Message\r\n          </Button>\r\n          <Modal\r\n            className={classes.modal}\r\n            open={open}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={open}>\r\n              <div className={classes.paper}>\r\n                <NewMessage classes={classes} inbox={isInbox} handleClose={handleClose}/>\r\n              </div>\r\n            </Fade>\r\n          </Modal>\r\n        </Grid>\r\n      }\r\n        <Divider />\r\n        <ListItem button selected={selectedIndex === 'inbox'} onClick={(event) => handleListItemClick(event, 'inbox')}>\r\n          <ListItemIcon>\r\n            <InboxIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Inbox\" />\r\n        </ListItem>\r\n        <ListItem button selected={selectedIndex === 'sent'} onClick={(event) => handleListItemClick(event, 'sent')}>\r\n          <ListItemIcon>\r\n            <SendIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Messages Sent\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OperationBox;\r\n","export const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n","import { monthNames } from '../Constants/dateConstants';\r\n\r\nconst isToday = (someDate) => {\r\n    const today = new Date()\r\n    return someDate.getDate() === today.getDate() &&\r\n      someDate.getMonth() === today.getMonth() &&\r\n      someDate.getFullYear() === today.getFullYear();\r\n}\r\n\r\nconst isThisYear = (someDate) => {\r\n    const today = new Date()\r\n    return someDate.getFullYear() === today.getFullYear();\r\n}\r\n\r\nexport const dateFormating = dateString => {\r\n    const date = new Date(dateString);\r\n    if (isToday(date))\r\n        return (date.getHours() >= 10 ? date.getHours() : '0' + date.getHours()) + \":\" + (date.getMinutes() >= 10 ? date.getMinutes() : '0' + date.getMinutes());\r\n    else if (isThisYear(date)) {\r\n        const month = monthNames[date.getMonth()];\r\n        const day = date.getDate();\r\n        const dayPostfix = date.getDate() % 10 === 1 ? 'st' : date.getDate() % 10 === 2 ? 'nd' : date.getDate() % 10 === 3 ? 'rd' : 'th';\r\n        return month + \" \" + day + \"\" + dayPostfix;\r\n    }\r\n    else \r\n        return date.toLocaleDateString();\r\n}","import React, { Fragment, useState } from 'react';\r\nimport { isEmpty } from 'lodash';\r\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nimport NewMessage from './NewMessage';\r\nimport * as dateService from '../../Services/dateService';\r\n\r\nconst ExpansionPanel = withStyles({\r\n  root: {\r\n    border: '1px solid rgba(0, 0, 0, .125)',\r\n    boxShadow: 'none',\r\n    width: '100%',\r\n    '&:not(:last-child)': {\r\n      borderBottom: 0,\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n    '&$expanded': {\r\n      margin: 'auto',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n  root: {\r\n    backgroundColor: 'rgba(0, 0, 0, .03)',\r\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\r\n    marginBottom: -1,\r\n    width: '100%',\r\n    minHeight: 56,\r\n    '&$expanded': {\r\n      minHeight: 56,\r\n    },\r\n  },\r\n  content: {\r\n    '&$expanded': {\r\n      margin: '12px 0',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    width: '100%',\r\n  },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nconst CenteredContentTypography = withStyles((theme) => ({\r\n  root: {\r\n    alignSelf: 'center',\r\n  },\r\n}))(Typography);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst MessagesList = props => {\r\n  const classes = useStyles();\r\n  const { messages, isInbox, handleAddition, handleDelete } = props;\r\n  const [expanded, setExpanded] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (added = false) => {\r\n    setOpen(false);\r\n    if (added)\r\n      handleAddition();\r\n  };\r\n\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n\r\n  if (!isEmpty(messages)) {\r\n    return (\r\n      messages.map((message, index) => {\r\n        return (\r\n          <ExpansionPanel square display=\"grid\" expanded={expanded === `panel${index}`} onChange={handleChange('panel'+index)} key={index}>\r\n            <ExpansionPanelSummary aria-controls={`panel${index}d-content`} id={`panel${index}d-header`}>\r\n              <Fragment>\r\n                <Typography style={{ marginRight: 'auto'}}>{`From: ${message.sender}`} <br /> {`To: ${message.receiver}`}</Typography>\r\n                <CenteredContentTypography style={{ marginRight: 'auto'}}>{message.subject}</CenteredContentTypography>\r\n                <CenteredContentTypography >{dateService.dateFormating(message.creationDate)}</CenteredContentTypography>\r\n                <IconButton onClick={() => { handleDelete(message._id, messages) }}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Fragment>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Typography style={{ marginRight: 'auto'}}>{message.message}</Typography>\r\n              {isInbox && <IconButton size=\"small\" onClick={handleOpen}>\r\n                Reply\r\n                <SendIcon />\r\n              </IconButton> \r\n              }\r\n              <Modal\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                  timeout: 500,\r\n                }}\r\n              >\r\n                <Fade in={open}>\r\n                  <div className={classes.paper}>\r\n                    <NewMessage receiver={message.sender} classes={classes} inbox={isInbox} handleClose={handleClose}/>\r\n                  </div>\r\n                </Fade>\r\n              </Modal>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        );\r\n      })\r\n    );\r\n  } else {\r\n    return <Fragment>You have no messages at this moment</Fragment>;\r\n  }\r\n}\r\n\r\nexport default MessagesList;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nimport { editUserDetails } from '../Actions/userActions';\r\n\r\nclass EditUserDetails extends Component {\r\n    constructor(props){ \r\n        super(props);\r\n\r\n        this.state = {\r\n            username: props.user.username,\r\n            newName: props.user.name ? props.user.name : '',\r\n            oldPassword: '',\r\n            newPassword: '',\r\n        }\r\n    }\r\n    \r\n    handleSubmit = event => {\r\n        const { editUserDetails, handleClose } = this.props;\r\n        event.preventDefault();\r\n        editUserDetails(this.state).then(() => {\r\n            handleClose(true);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.main}>\r\n                    <Grid container justify=\"center\">\r\n                        <Avatar className={classes.avatar}>\r\n                            <EditIcon />\r\n                        </Avatar>\r\n                    </Grid>\r\n                    <Grid container justify=\"center\">\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Compose New Message\r\n                        </Typography>\r\n                    </Grid>\r\n                    <form className={classes.form} noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField\r\n                        autoComplete=\"username\"\r\n                        name=\"username\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        disabled\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        value={this.state.username}\r\n                        autoFocus\r\n                        />\r\n                        <TextField\r\n                        autoComplete=\"newName\"\r\n                        name=\"newName\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"newName\"\r\n                        label=\"Name\"\r\n                        value={this.state.newName}\r\n                        onInput={ e=> this.setState({ newName: e.target.value })}\r\n                        autoFocus\r\n                        />\r\n                        <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"oldPassword\"\r\n                        label=\"Old Password\"\r\n                        name=\"oldPassword\"\r\n                        type=\"password\"\r\n                        onInput={ e=> this.setState({ oldPassword: e.target.value })}\r\n                        autoComplete=\"current-password\"\r\n                        />\r\n                        <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"newPassword\"\r\n                        label=\"New Password\"\r\n                        name=\"newPassword\"\r\n                        type=\"password\"\r\n                        onInput={ e=> this.setState({ newPassword: e.target.value })}\r\n                        autoComplete=\"current-password\"\r\n                        />\r\n                        <Typography align=\"center\" color=\"error\">\r\n                            {this.props.errorMessage}\r\n                        </Typography>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<SendIcon />}\r\n                            className={classes.submit}\r\n                        >\r\n                            Send\r\n                        </Button>\r\n                    </form>\r\n              </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { user: state.user.user, errorMessage: state.user.errorMessage };\r\n}\r\n\r\nexport default connect(mapStateToProps, { editUserDetails })(EditUserDetails);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { isEmpty } from 'lodash';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nimport requireAuth from '../HOCS/requireAuth';\r\nimport OperationBox from './OperationBox';\r\nimport MessagesList from './MessagesList';\r\nimport EditUserDetails from '../EditUserDetails';\r\nimport { signout } from '../../Actions/authActions';\r\nimport { getUserDetailsByToken, clearUser } from '../../Actions/userActions';\r\nimport { getAllReceivedMessages, getAllSentMessages, deleteMessage, clearMessages } from '../../Actions/messageActions';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24,\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    alignItems: 'center',\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  modalPaper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Mailbox = props => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(true);\r\n    const [inbox, setInbox] = useState(true);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const { authenticated, user, messagesReceived, messagesSent, \r\n      getUserDetailsByToken, clearUser, getAllReceivedMessages, getAllSentMessages, deleteMessage, clearMessages, signout } = props;\r\n\r\n    const handleModalOpen = () => {\r\n      setOpenModal(true);\r\n    };\r\n  \r\n    const handleModalClose = () => {\r\n      setOpenModal(false);\r\n    };\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleMessagesShown = inbox => {\r\n      setInbox(!inbox);\r\n    };\r\n\r\n    useEffect(() => {\r\n      if (authenticated && isEmpty(user)) {\r\n        getUserDetailsByToken(authenticated);\r\n      } else if (authenticated) {\r\n        if (inbox) {\r\n          if (messagesReceived === undefined) {\r\n            handleGetAllReceviedMessages(user.username);\r\n          } \r\n        } else {\r\n          if (messagesSent === undefined) {\r\n            handleGetAllSentMessages(user.username);\r\n          } \r\n        }\r\n      }\r\n    });\r\n\r\n    const handleGetAllReceviedMessages = username => {\r\n      getAllReceivedMessages({ username });\r\n    }\r\n  \r\n    const handleGetAllSentMessages = username => {\r\n      getAllSentMessages({ username });\r\n    }\r\n\r\n    const handleAddition = () => {\r\n      handleGetAllSentMessages(user.username);\r\n    }\r\n\r\n    const handleDelete = (messageId, messages) => {\r\n      const newMessages = messages.filter(message => {\r\n        return message._id !== messageId;\r\n      });\r\n\r\n      deleteMessage(messageId, !inbox).then(() => {\r\n        if (inbox) {\r\n          if (newMessages.length < messagesReceived.length) {\r\n            handleGetAllReceviedMessages(user.username);\r\n          } \r\n        } else {\r\n          if (newMessages.length < messagesSent.length) {\r\n            handleGetAllSentMessages(user.username);\r\n          } \r\n        }\r\n      });\r\n    }\r\n\r\n    const clearStore = () => {\r\n      clearMessages();\r\n      clearUser();\r\n      signout();\r\n    }\r\n\r\n    if (!isEmpty(user)) {\r\n      return (\r\n          <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n              <Toolbar className={classes.toolbar}>\r\n              <IconButton\r\n                  edge=\"start\"\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={handleDrawerOpen}\r\n                  className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n              >\r\n                  <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                Welcome\r\n                <IconButton color=\"inherit\" size=\"small\" onClick={handleModalOpen}>{user.username}</IconButton>\r\n                <Modal\r\n                className={classes.modal}\r\n                open={openModal}\r\n                onClose={handleModalClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                  timeout: 500,\r\n                }}\r\n              >\r\n                <Fade in={openModal}>\r\n                  <div className={classes.modalPaper}>\r\n                    <EditUserDetails classes={classes} handleClose={handleModalClose}/>\r\n                    {/* <NewMessage receiver={message.sender} classes={classes} inbox={isInbox} handleClose={handleClose}/> */}\r\n                  </div>\r\n                </Fade>\r\n              </Modal>\r\n              </Typography>\r\n              <IconButton color=\"inherit\" onClick={() => { clearStore() }}>\r\n                  <ExitToAppIcon />\r\n                  Sign Out\r\n              </IconButton>\r\n              </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n              variant=\"permanent\"\r\n              classes={{\r\n              paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n              }}\r\n              open={open}\r\n          >\r\n              <div className={classes.toolbarIcon}>\r\n                  <IconButton onClick={handleDrawerClose}>\r\n                      <ChevronLeftIcon />\r\n                  </IconButton>\r\n              </div>\r\n              <Divider />\r\n              <OperationBox isDrawerOpen={open} isInbox={inbox} handleAddition={handleAddition} handleMessagesShown={handleMessagesShown}/>\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            <div className={classes.appBarSpacer} />\r\n            <Container maxWidth={false} className={classes.container}>\r\n              <Grid container style={{ display: 'grid' }}>\r\n                <Grid item>\r\n                  <Paper className={classes.paper}>\r\n                    <MessagesList messages={inbox ? messagesReceived : messagesSent } isInbox={inbox} handleAddition={handleAddition} handleDelete={handleDelete}/>\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          </main>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return <div />;\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { authenticated: state.auth.authenticated, user: state.user.user, messagesReceived: state.messages.messagesReceived, messagesSent: state.messages.messagesSent };\r\n}\r\n\r\nexport default withStyles(useStyles)(connect(\r\n    mapStateToProps, { getUserDetailsByToken, clearUser, getAllReceivedMessages, getAllSentMessages, deleteMessage, clearMessages, signout }\r\n)(requireAuth(Mailbox)));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nexport default ChildComponent => {\r\n  class ComposedComponent extends Component {\r\n    // Our component just got rendered\r\n    componentDidMount() {\r\n      this.shouldNavigateAway();\r\n    }\r\n    // Our component just got updated\r\n    componentDidUpdate() {\r\n      this.shouldNavigateAway();\r\n    }\r\n    shouldNavigateAway() {\r\n      if (!this.props.auth) {\r\n        this.props.history.push('/Signin');\r\n      }\r\n    }\r\n    render() {\r\n      return <ChildComponent {...this.props} />;\r\n    }\r\n  }\r\n  function mapStateToProps(state) {\r\n    return { auth: state.auth.authenticated };\r\n  }\r\n  return connect(mapStateToProps)(ComposedComponent);\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport Reducers from './Reducers';\r\nimport App from './Components/App';\r\nimport Signup from './Components/Auth/Signup';\r\nimport Signin from './Components/Auth/Signin';\r\nimport Mailbox from './Components/Messages/Mailbox';\r\n\r\nconst store = createStore(\r\n    Reducers,\r\n    {\r\n        auth: { authenticated: localStorage.getItem('token') }\r\n    },\r\n    applyMiddleware(reduxThunk)\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App>\r\n                <Route path=\"/\" exact component={Mailbox} />\r\n                <Route path=\"/Signin\" component={Signin} />\r\n                <Route path=\"/Signup\" component={Signup} />\r\n            </App>\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}